{"version":3,"sources":["requests/getImages.js","components/Search.js","components/SearchResults.js","components/App.js","reportWebVitals.js","index.js"],"names":["getImages","query","axios","get","then","response","console","log","data","collection","items","filter","i","media_type","map","image","links","href","catch","err","Promise","resolve","Search","setSearchResults","useState","value","setValue","handleSubmit","event","a","preventDefault","className","onSubmit","type","onChange","e","target","SearchResults","results","src","alt","data-testid","App","searchResults","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAuBeA,EArBG,SAACC,GACjB,OAAKA,EAGIC,IACJC,IADI,+CACwCF,IAC5CG,MAAK,SAACC,GAOL,OANAC,QAAQC,IAAIF,GACSA,EAASG,KAAKC,WAAWC,MACZC,QAChC,SAACC,GAAD,MAAgC,UAAzBA,EAAEJ,KAAK,GAAGK,cAESC,KAAI,SAACC,GAAD,OAAWA,EAAMC,MAAM,GAAGC,WAG3DC,OAAM,SAACC,GACNb,QAAQC,IAAIY,MAdTC,QAAQC,QAAQ,K,OCyBZC,EAxBA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAChB,EAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACnBD,EAAME,iBADa,KAEnBP,EAFmB,SAEIvB,EAAUyB,GAFd,6EAAH,sDAKlB,OACE,mCACE,uBAAMM,UAAU,cAAcC,SAAUL,EAAxC,UACE,uBACEM,KAAK,OACLF,UAAU,qBACVG,SAAU,SAACC,GAAD,OAAOT,EAASS,EAAEC,OAAOX,UAErC,wBAAQM,UAAU,sBAAsBE,KAAK,SAA7C,0BCOOI,G,MAxBO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OAAKA,EAQH,mCACE,qBAAKP,UAAU,kBAAf,SACGO,EAAQxB,KAAI,SAACC,GAAD,OACX,qBACEgB,UAAU,aACVQ,IAAKxB,EACLyB,IAAI,aACJC,cAAY,sBAdb,OCeIC,MAhBf,WACE,MAA0ClB,mBAAS,IAAnD,mBAAOmB,EAAP,KAAsBpB,EAAtB,KAEA,OACE,sBAAKQ,UAAU,MAAf,UACE,qBACEQ,IAAI,yEACJC,IAAI,YACJT,UAAU,aAEZ,cAAC,EAAD,CAAQR,iBAAkBA,IAC1B,cAAC,EAAD,CAAee,QAASK,QCJfC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4dd17cc3.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst getImages = (query) => {\n  if (!query) {\n    return Promise.resolve([]);\n  } else {\n    return axios\n      .get(`https://images-api.nasa.gov/search?q=${query}`)\n      .then((response) => {\n        console.log(response);\n        const imageResults = response.data.collection.items;\n        const parsedImages = imageResults.filter(\n          (i) => i.data[0].media_type === \"image\"\n        );\n        const images = parsedImages.map((image) => image.links[0].href);\n        return images;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n};\n\nexport default getImages;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/Search.css\";\nimport getImages from \"../requests/getImages\";\n\nconst Search = ({ setSearchResults }) => {\n  const [value, setValue] = useState();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setSearchResults(await getImages(value));\n  };\n\n  return (\n    <>\n      <form className=\"search-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"search-form__input\"\n          onChange={(e) => setValue(e.target.value)}\n        />\n        <button className=\"search-form__button\" type=\"submit\">\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Search;\n\nSearch.propTypes = {\n  setSearchResults: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/SearchResults.css\";\n\nconst SearchResults = ({ results }) => {\n  if (!results) {\n    return null;\n  }\n  // // if (results.length === 0) {\n  //   return <p>No results</p>;\n  // }\n\n  return (\n    <>\n      <div className=\"image-container\">\n        {results.map((image) => (\n          <img\n            className=\"data-image\"\n            src={image}\n            alt=\"space pics\"\n            data-testid=\"data-image\"\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default SearchResults;\n\nSearchResults.propTypes = {\n  results: PropTypes.array,\n};\n","import React, { useState } from \"react\";\nimport \"../styles/App.css\";\nimport Search from \"./Search.js\";\nimport SearchResults from \"./SearchResults.js\";\n\nfunction App() {\n  const [searchResults, setSearchResults] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <img\n        src=\"https://cdn.cnn.com/cnnnext/dam/assets/200424060716-nasa-worm-logo.jpg\"\n        alt=\"NASA Logo\"\n        className=\"nasa-img\"\n      />\n      <Search setSearchResults={setSearchResults} />\n      <SearchResults results={searchResults} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}